{"mappings":"YAcA,IAAMA,EAAUC,SAASC,cAAc,SAEjCC,EAAW,GASjB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAOP,SAASS,EAAUC,GAASC,QAAQC,IAAIF,E,CACxC,SAASG,EAAQC,GAASH,QAAQC,IAAIE,E,CApBtCpB,EAAQqB,iBAAiB,SAJL,SAAAC,GAClB,IAAwBC,EAAAD,EAAEE,OAAlBC,EAAgBF,EAAhBE,KAAMT,EAAUO,EAAVP,MACdb,EAASsB,GAAQT,C,IAqCnBhB,EAAQqB,iBAAiB,UAbJ,SAACC,GACpBA,EAAEI,iBACF,IAAK,IAAIC,EAAI,EAAGrB,GAASH,EAASG,MAC1BqB,EAAIxB,EAASyB,OACbD,GAAK,EAAGrB,IAAUH,EAAS0B,KAAM,CAGvCzB,EAFiBuB,EAAI,EAEGrB,GAAOwB,KAAKf,GAAWgB,MAAMZ,E,CAGvDnB,EAAQgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n\n/////////////////////////////////////\n\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nconst formData = {};\n\nconst onFormInput = e => {\n  const { name, value } = e.target;\n  formData[name] = value;\n}\nformRef.addEventListener('input', onFormInput)\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay)\n  } )\n}\n\n// function onSuccess(value) { Notify.success(value) };\n// function onError(error) { Notify.failure(error) };\n\nfunction onSuccess(value) { console.log(value) };\nfunction onError(error) { console.log(error) };\n\nconst onFormSubmit = (e) => {\n  e.preventDefault();\n  for (let i = 0, delay = +formData.delay;\n          i < formData.amount;\n          i += 1, delay += +formData.step) {\n    const position = i + 1;\n\n    createPromise(position, delay).then(onSuccess).catch(onError);\n  }\n\n  formRef.reset();\n}\n\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":["$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$onSuccess","value","console","log","$ce04d3a99e08e73b$var$onError","error","addEventListener","e","_target","target","name","preventDefault","i","amount","step","then","catch","reset"],"version":3,"file":"03-promises.c5716678.js.map"}